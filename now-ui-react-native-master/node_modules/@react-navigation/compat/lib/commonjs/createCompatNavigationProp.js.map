{"version":3,"sources":["createCompatNavigationProp.tsx"],"names":["createCompatNavigationProp","navigation","state","context","isFirstRouteInParent","parent","subscriptions","didFocus","Map","didBlur","refocus","Object","entries","helpers","reduce","acc","name","method","args","dispatch","original","addListener","type","callback","unsubscribe","listener","isFocused","set","Error","subscription","remove","removeListener","get","routeName","index","undefined","console","warn","routes","getParam","paramName","defaultValue","params","dangerouslyGetState","key","dangerouslyGetParent"],"mappings":"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","sourcesContent":["import {\n  NavigationState,\n  PartialState,\n  ParamListBase,\n  NavigationProp,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as helpers from './helpers';\nimport { CompatNavigationProp } from './types';\n\ntype EventName =\n  | 'action'\n  | 'willFocus'\n  | 'willBlur'\n  | 'didFocus'\n  | 'didBlur'\n  | 'refocus';\n\n// const focusSubscriptions = new WeakMap<() => void, () => void>();\n// const blurSubscriptions = new WeakMap<() => void, () => void>();\n// const refocusSubscriptions = new WeakMap<() => void, () => void>();\n\nexport default function createCompatNavigationProp<\n  NavigationPropType extends NavigationProp<ParamListBase>,\n  ParamList extends ParamListBase = NavigationPropType extends NavigationProp<\n    infer P\n  >\n    ? P\n    : ParamListBase\n>(\n  navigation: NavigationPropType,\n  state:\n    | (RouteProp<ParamList, keyof ParamList> & {\n        state?: NavigationState | PartialState<NavigationState>;\n      })\n    | NavigationState\n    | PartialState<NavigationState>,\n  context: Record<string, any>,\n  isFirstRouteInParent?: boolean\n): CompatNavigationProp<NavigationPropType> {\n  context.parent = context.parent || {};\n  context.subscriptions = context.subscriptions || {\n    didFocus: new Map<() => void, () => void>(),\n    didBlur: new Map<() => void, () => void>(),\n    refocus: new Map<() => void, () => void>(),\n  };\n\n  return {\n    ...navigation,\n    ...Object.entries(helpers).reduce<{\n      [key: string]: (...args: any[]) => void;\n    }>((acc, [name, method]: [string, Function]) => {\n      if (name in navigation) {\n        acc[name] = (...args: any[]) => navigation.dispatch(method(...args));\n      }\n\n      return acc;\n    }, {}),\n    original: navigation,\n    addListener(type: EventName, callback: () => void) {\n      let unsubscribe: () => void;\n\n      switch (type) {\n        case 'willFocus':\n          unsubscribe = navigation.addListener('focus', callback);\n          break;\n        case 'willBlur':\n          unsubscribe = navigation.addListener('blur', callback);\n          break;\n        case 'didFocus': {\n          const listener = () => {\n            if (navigation.isFocused()) {\n              callback();\n            }\n          };\n\n          // @ts-ignore\n          unsubscribe = navigation.addListener('transitionEnd', listener);\n          context.subscriptions.didFocus.set(callback, unsubscribe);\n          break;\n        }\n        case 'didBlur': {\n          const listener = () => {\n            if (!navigation.isFocused()) {\n              callback();\n            }\n          };\n\n          // @ts-ignore\n          unsubscribe = navigation.addListener('transitionEnd', listener);\n          context.subscriptions.didBlur.set(callback, unsubscribe);\n          break;\n        }\n        case 'refocus': {\n          const listener = () => {\n            if (navigation.isFocused()) {\n              callback();\n            }\n          };\n\n          // @ts-ignore\n          unsubscribe = navigation.addListener('tabPress', listener);\n          context.subscriptions.refocus.set(callback, unsubscribe);\n          break;\n        }\n        case 'action':\n          throw new Error(\"Listening to 'action' events is not supported.\");\n        default:\n          // @ts-ignore\n          unsubscribe = navigation.addListener(type, callback);\n      }\n\n      const subscription = () => unsubscribe();\n\n      subscription.remove = unsubscribe;\n\n      return subscription;\n    },\n    removeListener(type: EventName, callback: () => void) {\n      context.subscriptions = context.subscriptions || {};\n\n      switch (type) {\n        case 'willFocus':\n          navigation.removeListener('focus', callback);\n          break;\n        case 'willBlur':\n          navigation.removeListener('blur', callback);\n          break;\n        case 'didFocus': {\n          const unsubscribe = context.subscriptions.didFocus.get(callback);\n          unsubscribe?.();\n          break;\n        }\n        case 'didBlur': {\n          const unsubscribe = context.subscriptions.didBlur.get(callback);\n          unsubscribe?.();\n          break;\n        }\n        case 'refocus': {\n          const unsubscribe = context.subscriptions.refocus.get(callback);\n          unsubscribe?.();\n          break;\n        }\n        case 'action':\n          throw new Error(\"Listening to 'action' events is not supported.\");\n        default:\n          // @ts-ignore\n          navigation.removeListener(type, callback);\n      }\n    },\n    state: {\n      ...state,\n      // @ts-ignore\n      routeName: state.name,\n      get index() {\n        // @ts-ignore\n        if (state.index !== undefined) {\n          // @ts-ignore\n          return state.index;\n        }\n\n        console.warn(\n          \"Accessing child navigation state for a route is not safe and won't work correctly.\"\n        );\n\n        // @ts-ignore\n        return state.state ? state.state.index : undefined;\n      },\n      get routes() {\n        // @ts-ignore\n        if (state.routes !== undefined) {\n          // @ts-ignore\n          return state.routes;\n        }\n\n        console.warn(\n          \"Accessing child navigation state for a route is not safe and won't work correctly.\"\n        );\n\n        // @ts-ignore\n        return state.state ? state.state.routes : undefined;\n      },\n    },\n    getParam<T extends keyof ParamList>(\n      paramName: T,\n      defaultValue: ParamList[T]\n    ): ParamList[T] {\n      // @ts-ignore\n      const params = state.params;\n\n      if (params && paramName in params) {\n        return params[paramName];\n      }\n\n      return defaultValue;\n    },\n    isFirstRouteInParent(): boolean {\n      if (typeof isFirstRouteInParent === 'boolean') {\n        return isFirstRouteInParent;\n      }\n\n      const { routes } = navigation.dangerouslyGetState();\n\n      // @ts-ignore\n      return routes[0].key === state.key;\n    },\n    dangerouslyGetParent() {\n      const parent = navigation.dangerouslyGetParent();\n\n      if (parent) {\n        return createCompatNavigationProp(\n          parent,\n          navigation.dangerouslyGetState(),\n          context.parent\n        );\n      }\n\n      return undefined;\n    },\n  } as any;\n}\n"]}
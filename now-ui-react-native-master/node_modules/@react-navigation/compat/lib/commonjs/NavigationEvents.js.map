{"version":3,"sources":["NavigationEvents.tsx"],"names":["NavigationEvents","props","navigation","propsRef","React","useRef","useEffect","current","unsubFocus","addListener","onWillFocus","unsubBlur","onWillBlur","unsubTransitionEnd","isFocused","onDidFocus","onDidBlur"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AASe,SAASA,gBAAT,CAA0BC,KAA1B,EAAwC;AACrD,QAAMC,UAAU,GAAG,4BAAnB;AACA,QAAMC,QAAQ,GAAGC,KAAK,CAACC,MAAN,CAAaJ,KAAb,CAAjB;AAEAG,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBH,IAAAA,QAAQ,CAACI,OAAT,GAAmBN,KAAnB;AACD,GAFD;AAIAG,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,UAAME,UAAU,GAAGN,UAAU,CAACO,WAAX,CAAuB,OAAvB,EAAgC,MAAM;AAAA;;AACvD,oDAAAN,QAAQ,CAACI,OAAT,EAAiBG,WAAjB;AACD,KAFkB,CAAnB;AAIA,UAAMC,SAAS,GAAGT,UAAU,CAACO,WAAX,CAAuB,MAAvB,EAA+B,MAAM;AAAA;;AACrD,sDAAAN,QAAQ,CAACI,OAAT,EAAiBK,UAAjB;AACD,KAFiB,CAAlB,CALoB,CASpB;;AACA,UAAMC,kBAAkB,GAAGX,UAAU,CAACO,WAAX,CAAuB,eAAvB,EAAwC,MAAM;AACvE,UAAIP,UAAU,CAACY,SAAX,EAAJ,EAA4B;AAAA;;AAC1B,uDAAAX,QAAQ,CAACI,OAAT,EAAiBQ,UAAjB;AACD,OAFD,MAEO;AAAA;;AACL,wDAAAZ,QAAQ,CAACI,OAAT,EAAiBS,SAAjB;AACD;AACF,KAN0B,CAA3B;AAQA,WAAO,MAAM;AACXR,MAAAA,UAAU;AACVG,MAAAA,SAAS;AACTE,MAAAA,kBAAkB;AACnB,KAJD;AAKD,GAvBD,EAuBG,CAACX,UAAD,CAvBH;AAyBA,SAAO,IAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\n\ntype Props = {\n  onWillFocus?: () => void;\n  onDidFocus?: () => void;\n  onWillBlur?: () => void;\n  onDidBlur?: () => void;\n};\n\nexport default function NavigationEvents(props: Props) {\n  const navigation = useNavigation();\n  const propsRef = React.useRef(props);\n\n  React.useEffect(() => {\n    propsRef.current = props;\n  });\n\n  React.useEffect(() => {\n    const unsubFocus = navigation.addListener('focus', () => {\n      propsRef.current.onWillFocus?.();\n    });\n\n    const unsubBlur = navigation.addListener('blur', () => {\n      propsRef.current.onWillBlur?.();\n    });\n\n    // @ts-ignore\n    const unsubTransitionEnd = navigation.addListener('transitionEnd', () => {\n      if (navigation.isFocused()) {\n        propsRef.current.onDidFocus?.();\n      } else {\n        propsRef.current.onDidBlur?.();\n      }\n    });\n\n    return () => {\n      unsubFocus();\n      unsubBlur();\n      unsubTransitionEnd();\n    };\n  }, [navigation]);\n\n  return null;\n}\n"]}
{"version":3,"sources":["useCompatNavigation.tsx"],"names":["useCompatNavigation","navigation","route","isFirstRouteInParent","state","routes","key","context","React","useRef","useMemo","current"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;;;;;;;;AAGe,SAASA,mBAAT,GAEX;AACF,QAAMC,UAAU,GAAG,4BAAnB;AACA,QAAMC,KAAK,GAAG,uBAAd;AAEA,QAAMC,oBAAoB,GAAG,gCAC1BC,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,GAAhB,KAAwBJ,KAAK,CAACI,GADd,CAA7B;AAIA,QAAMC,OAAO,GAAGC,KAAK,CAACC,MAAN,CAAkC,EAAlC,CAAhB;AAEA,SAAOD,KAAK,CAACE,OAAN,CACL,MACE,yCACET,UADF,EAEEC,KAFF,EAGEK,OAAO,CAACI,OAHV,EAIER,oBAJF,CAFG,EAQL,CAACA,oBAAD,EAAuBF,UAAvB,EAAmCC,KAAnC,CARK,CAAP;AAUD","sourcesContent":["import * as React from 'react';\nimport {\n  useNavigation,\n  useRoute,\n  NavigationProp,\n  ParamListBase,\n  useNavigationState,\n} from '@react-navigation/native';\nimport createCompatNavigationProp from './createCompatNavigationProp';\nimport { CompatNavigationProp } from './types';\n\nexport default function useCompatNavigation<\n  T extends NavigationProp<ParamListBase>\n>() {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  const isFirstRouteInParent = useNavigationState(\n    (state) => state.routes[0].key === route.key\n  );\n\n  const context = React.useRef<Record<string, any>>({});\n\n  return React.useMemo(\n    () =>\n      createCompatNavigationProp(\n        navigation,\n        route as any,\n        context.current,\n        isFirstRouteInParent\n      ) as CompatNavigationProp<T>,\n    [isFirstRouteInParent, navigation, route]\n  );\n}\n"]}
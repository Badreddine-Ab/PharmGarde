{"version":3,"sources":["helpers.tsx"],"names":["NavigationActions","StackActions","SwitchActions","DrawerActions","navigate","options","params","action","routeName","goBack","fromKey","back","key","setParams","reset","replace","push","pop","n","popToTop","dismiss","jumpTo","openDrawer","closeDrawer","toggleDrawer"],"mappings":"AAAA,OAAO,KAAKA,iBAAZ,MAAmC,qBAAnC;AACA,OAAO,KAAKC,YAAZ,MAA8B,gBAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAYA,OAAO,SAASC,QAAT,CACLC,OADK,EAELC,MAFK,EAGLC,MAHK,EAIe;AACpB,MAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,WAAOL,iBAAiB,CAACI,QAAlB,CAA2B;AAChCI,MAAAA,SAAS,EAAEH,OADqB;AAEhCC,MAAAA,MAFgC;AAGhCC,MAAAA;AAHgC,KAA3B,CAAP;AAKD;;AAED,SAAOP,iBAAiB,CAACI,QAAlB,CAA2BC,OAA3B,CAAP;AACD;AAED,OAAO,SAASI,MAAT,CAAgBC,OAAhB,EAAyC;AAC9C,SAAOV,iBAAiB,CAACW,IAAlB,CAAuB;AAAEC,IAAAA,GAAG,EAAEF;AAAP,GAAvB,CAAP;AACD;AAED,OAAO,SAASG,SAAT,CAAmBP,MAAnB,EAAmC;AACxC,SAAON,iBAAiB,CAACa,SAAlB,CAA4B;AAAEP,IAAAA;AAAF,GAA5B,CAAP;AACD;AAED,OAAO,SAASQ,KAAT,GAAiB;AACtB,SAAOb,YAAY,CAACa,KAAb,EAAP;AACD;AAED,OAAO,SAASC,OAAT,CAAiBP,SAAjB,EAAoCF,MAApC,EAAqDC,MAArD,EAAqE;AAC1E,SAAON,YAAY,CAACc,OAAb,CAAqB;AAC1BP,IAAAA,SAD0B;AAE1BF,IAAAA,MAF0B;AAG1BC,IAAAA;AAH0B,GAArB,CAAP;AAKD;AAED,OAAO,SAASS,IAAT,CAAcR,SAAd,EAAiCF,MAAjC,EAAkDC,MAAlD,EAAkE;AACvE,SAAON,YAAY,CAACe,IAAb,CAAkB;AACvBR,IAAAA,SADuB;AAEvBF,IAAAA,MAFuB;AAGvBC,IAAAA;AAHuB,GAAlB,CAAP;AAKD;AAED,OAAO,SAASU,GAAT,CAAaC,CAAS,GAAG,CAAzB,EAA4B;AACjC,SAAOjB,YAAY,CAACgB,GAAb,CAAiB,OAAOC,CAAP,KAAa,QAAb,GAAwB;AAAEA,IAAAA;AAAF,GAAxB,GAAgCA,CAAjD,CAAP;AACD;AAED,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAOlB,YAAY,CAACkB,QAAb,EAAP;AACD;AAED,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOnB,YAAY,CAACmB,OAAb,EAAP;AACD;AAED,OAAO,SAASC,MAAT,CAAgBb,SAAhB,EAAmC;AACxC,SAAON,aAAa,CAACmB,MAAd,CAAqB;AAAEb,IAAAA;AAAF,GAArB,CAAP;AACD;AAED,OAAO,SAASc,UAAT,GAAsB;AAC3B,SAAOnB,aAAa,CAACmB,UAAd,EAAP;AACD;AAED,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAOpB,aAAa,CAACoB,WAAd,EAAP;AACD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAOrB,aAAa,CAACqB,YAAd,EAAP;AACD","sourcesContent":["import * as NavigationActions from './NavigationActions';\nimport * as StackActions from './StackActions';\nimport * as SwitchActions from './SwitchActions';\nimport * as DrawerActions from './DrawerActions';\n\ntype NavigateActionPayload = Parameters<typeof NavigationActions.navigate>['0'];\n\ntype NavigateActionType = ReturnType<typeof NavigationActions.navigate>;\n\nexport function navigate(\n  routeName: string,\n  params?: object,\n  action?: never\n): NavigateActionType;\nexport function navigate(options: NavigateActionPayload): NavigateActionType;\nexport function navigate(\n  options: string | NavigateActionPayload,\n  params?: object,\n  action?: never\n): NavigateActionType {\n  if (typeof options === 'string') {\n    return NavigationActions.navigate({\n      routeName: options,\n      params,\n      action,\n    });\n  }\n\n  return NavigationActions.navigate(options);\n}\n\nexport function goBack(fromKey?: null | string) {\n  return NavigationActions.back({ key: fromKey });\n}\n\nexport function setParams(params: object) {\n  return NavigationActions.setParams({ params });\n}\n\nexport function reset() {\n  return StackActions.reset();\n}\n\nexport function replace(routeName: string, params?: object, action?: never) {\n  return StackActions.replace({\n    routeName,\n    params,\n    action,\n  });\n}\n\nexport function push(routeName: string, params?: object, action?: never) {\n  return StackActions.push({\n    routeName,\n    params,\n    action,\n  });\n}\n\nexport function pop(n: number = 1) {\n  return StackActions.pop(typeof n === 'number' ? { n } : n);\n}\n\nexport function popToTop() {\n  return StackActions.popToTop();\n}\n\nexport function dismiss() {\n  return StackActions.dismiss();\n}\n\nexport function jumpTo(routeName: string) {\n  return SwitchActions.jumpTo({ routeName });\n}\n\nexport function openDrawer() {\n  return DrawerActions.openDrawer();\n}\n\nexport function closeDrawer() {\n  return DrawerActions.closeDrawer();\n}\n\nexport function toggleDrawer() {\n  return DrawerActions.toggleDrawer();\n}\n"]}